/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus II License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 208 160)
	(text "i2c_master" (rect 5 0 49 12)(font "Arial" ))
	(text "inst" (rect 8 128 20 140)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 27 31 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "reset_n" (rect 0 0 30 12)(font "Arial" ))
		(text "reset_n" (rect 21 43 51 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "address[7..0]" (rect 0 0 51 12)(font "Arial" ))
		(text "address[7..0]" (rect 21 59 72 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "data[7..0]" (rect 0 0 36 12)(font "Arial" ))
		(text "data[7..0]" (rect 21 75 57 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "enable" (rect 0 0 24 12)(font "Arial" ))
		(text "enable" (rect 21 91 45 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 192 32)
		(output)
		(text "i2c_sclk" (rect 0 0 31 12)(font "Arial" ))
		(text "i2c_sclk" (rect 140 27 171 39)(font "Arial" ))
		(line (pt 192 32)(pt 176 32)(line_width 1))
	)
	(port
		(pt 192 48)
		(output)
		(text "i2c_sdat" (rect 0 0 33 12)(font "Arial" ))
		(text "i2c_sdat" (rect 138 43 171 55)(font "Arial" ))
		(line (pt 192 48)(pt 176 48)(line_width 1))
	)
	(port
		(pt 192 64)
		(output)
		(text "busy" (rect 0 0 20 12)(font "Arial" ))
		(text "busy" (rect 151 59 171 71)(font "Arial" ))
		(line (pt 192 64)(pt 176 64)(line_width 1))
	)
	(port
		(pt 192 80)
		(output)
		(text "slave_ack" (rect 0 0 41 12)(font "Arial" ))
		(text "slave_ack" (rect 130 75 171 87)(font "Arial" ))
		(line (pt 192 80)(pt 176 80)(line_width 1))
	)
	(parameter
		"clk_freq"
		"100000000"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"i2c_bus_clk_freq"
		"400000"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(drawing
		(rectangle (rect 16 16 176 128)(line_width 1))
	)
	(annotation_block (parameter)(rect 208 -64 308 16))
)
